apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

android {
    buildToolsVersion '28.0.3'
    compileSdkVersion 'android-Q'

    dataBinding.enabled = true

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 'Q'
        versionCode = rootProject.ext.versionCode
        versionName = rootProject.ext.versionName

        consumerProguardFiles 'proguard.pro'
    }

    lintOptions {
        abortOnError false
    }

    testOptions.unitTests {
        all {
            jvmArgs '-noverify'
        }
        returnDefaultValues true
        includeAndroidResources true
    }
}

dependencies {
    implementation 'androidx.annotation:annotation:1.0.1'
    implementation 'com.braintreepayments.api:braintree:3.0.0'

    implementation(group: 'com.visa.checkout', name: 'visacheckout-android-sdk', version: '6.6.1', ext: 'aar')

    testImplementation 'com.google.android.gms:play-services-wallet:16.0.1'
    testImplementation 'androidx.test:core:1.1.0'
    testImplementation 'androidx.test:runner:1.1.1'
    testImplementation 'androidx.test:rules:1.1.1'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.6'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.6.6'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.6'
    testImplementation 'org.powermock:powermock-classloading-xstream:1.6.6'
    testImplementation 'org.robolectric:robolectric:4.2'
    testImplementation 'org.skyscreamer:jsonassert:1.4.0'
    testImplementation 'com.squareup.assertj:assertj-android:1.1.1'
}

/* maven deploy + signing */
task javadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    classifier = 'javadoc'
    from javadocs.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives javadocsJar
    archives sourcesJar
}

signing {
    required { !android.defaultConfig.versionName.endsWith("SNAPSHOT") }
    sign configurations.archives
}

def sonatypeUsername = System.env['SONATYPE_USERNAME']
def sonatypePassword = System.env['SONATYPE_PASSWORD']

nexusStaging {
    packageGroup = "com.braintreepayments"
    delayBetweenRetriesInMillis = 10000
    username = sonatypeUsername
    password = sonatypePassword
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.setArtifactId 'visa-checkout'

            pom.project {
                name 'visa-checkout'
                groupId = 'com.braintreepayments.api'
                version = "${android.defaultConfig.versionName}"
                packaging 'jar'
                description 'Visa Checkout Module for Braintree\'s Android SDK.'
                url 'https://github.com/braintree/braintree-android-visa-checkout'

                scm {
                    url 'scm:git@github.com:braintree/braintree-android-visa-checkout.git'
                    connection 'scm:git@github.com:braintree/braintree-android-visa-checkout.git'
                    developerConnection 'scm:git@github.com:braintree/braintree-android-visa-checkout.git'
                }

                developers {
                    developer {
                        id 'devs'
                        name 'Braintree Payments'
                    }
                }

                licenses {
                    license {
                        name 'MIT'
                        url 'http://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }
            }

            pom.whenConfigured {
                it.dependencies.removeAll { true }
            }
        }
    }
}
